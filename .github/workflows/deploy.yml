name: Deploy to Production

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options:
          - staging
          - production

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract version from tag
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            echo "version=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and push images
        run: |
          # Build and push backend
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --file backend/Dockerfile \
            --tag ${{ secrets.DOCKER_USERNAME }}/contextstream-backend:${{ steps.version.outputs.version }} \
            --tag ${{ secrets.DOCKER_USERNAME }}/contextstream-backend:latest \
            --push \
            backend/

          # Build and push frontend
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --file Dockerfile \
            --tag ${{ secrets.DOCKER_USERNAME }}/contextstream-frontend:${{ steps.version.outputs.version }} \
            --tag ${{ secrets.DOCKER_USERNAME }}/contextstream-frontend:latest \
            --push \
            .

      # Deploy to server via SSH (customize based on your infrastructure)
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            cd /opt/contextstream
            docker-compose pull
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
            docker system prune -af

      - name: Run database migrations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            cd /opt/contextstream
            docker-compose exec -T backend alembic upgrade head

      - name: Health check
        run: |
          sleep 30
          curl -f ${{ secrets.DEPLOY_URL }}/health || exit 1

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Notify deployment
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Deployment ${{ job.status }}
            Version: ${{ steps.version.outputs.version }}
            Environment: ${{ github.event.inputs.environment || 'production' }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
